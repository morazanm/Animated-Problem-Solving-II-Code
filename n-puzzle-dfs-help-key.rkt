#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 403 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 6 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 74 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 116 116
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 18 67 155 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 30 70 190 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 135 185 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 208 208
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 116 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 125 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 15 223 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 19 5 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 244 194 71 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 127
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 86 86 86 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 0 31
31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 74 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 74 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 74 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 0 31
31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 31 31 -1 -1 73 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 73 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 1 #"\0"
1 54 125 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
184 134 11 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 48 96 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 38 #"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 31 #"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 41 #"profj:syntax-colors:scheme:block-comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 37 #"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 38 #"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 34 #"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 33 #"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 35 #"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 35 #"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 8 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 8 24 #"drscheme:text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 8 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 8 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 28 #"drscheme:check-syntax:set!d\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 49 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 14 #"Html Standard\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 234 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 234 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 234 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 234 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 234 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 234 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 234 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 234 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 234 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 234 1 #"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 234 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 234 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 234 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 234 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 26 #" Bitstream Vera Sans Mono\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 15 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 15 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 90 22 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 97 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 130 72 32 0
0 0 -1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 234 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 234 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1           0 2757 0 18 3 85
(5
 #";; The first three lines of this file were inserted by DrRacket. They"
 #" record metadata"
) 0 0 27 29 1 #"\n"
0 0 18 3 85
(6
 #";; about the language level of this file in a form that our tools can"
 #" easily process."
) 0 0 27 29 1 #"\n"
0 0 29 3 7 #"#reader"
0 0 27 3 1 #"("
0 0 14 3 3 #"lib"
0 0 27 3 1 #" "
0 0 20 3 36 #"\"htdp-intermediate-lambda-reader.ss\""
0 0 27 3 1 #" "
0 0 20 3 6 #"\"lang\""
0 0 27 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 27 3 1 #" "
0 0 14 3 21 #"n-puzzle-dfs-help-key"
0 0 27 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 27 3 1 #" "
0 0 23 3 2 #"#t"
0 0 27 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 27 3 3 #" (("
0 0 14 3 3 #"lib"
0 0 27 3 1 #" "
0 0 20 3 11 #"\"image.rkt\""
0 0 27 3 1 #" "
0 0 20 3 11 #"\"teachpack\""
0 0 27 3 1 #" "
0 0 20 3 7 #"\"2htdp\""
0 0 27 3 3 #") ("
0 0 14 3 3 #"lib"
0 0 27 3 1 #" "
0 0 20 3 14 #"\"universe.rkt\""
0 0 27 3 1 #" "
0 0 20 3 11 #"\"teachpack\""
0 0 27 3 1 #" "
0 0 20 3 7 #"\"2htdp\""
0 0 27 3 5 #"))) ("
0 0 14 3 13 #"htdp-settings"
0 0 27 3 3 #" #("
0 0 23 3 2 #"#t"
0 0 27 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 27 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 27 3 1 #" "
0 0 23 3 2 #"#f"
0 0 27 3 1 #" "
0 0 23 3 2 #"#t"
0 0 27 3 1 #" "
0 0 14 3 4 #"none"
0 0 27 3 1 #" "
0 0 23 3 2 #"#f"
0 0 27 3 3 #" (("
0 0 14 3 3 #"lib"
0 0 27 3 1 #" "
0 0 20 3 11 #"\"image.rkt\""
0 0 27 3 1 #" "
0 0 20 3 11 #"\"teachpack\""
0 0 27 3 1 #" "
0 0 20 3 7 #"\"2htdp\""
0 0 27 3 3 #") ("
0 0 14 3 3 #"lib"
0 0 27 3 1 #" "
0 0 20 3 14 #"\"universe.rkt\""
0 0 27 3 1 #" "
0 0 20 3 11 #"\"teachpack\""
0 0 27 3 1 #" "
0 0 20 3 7 #"\"2htdp\""
0 0 27 3 3 #")) "
0 0 23 3 2 #"#f"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 42 #"; 8-PUZZLE BASE CODE CSAS-1115 Version 1.0"
0 0 27 29 1 #"\n"
0 0 18 3 40 #"; Copyright (C) 2021 by Marco T. Morazan"
0 0 27 29 1 #"\n"
0 0 18 3 36 #"; Written by: Marco T. Morazan, 2021"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 12 #";; CONSTANTS"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 3 #"100"
0 0 27 3 2 #") "
0 0 18 3 29 #"; the length of N-puzzle tile"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"TILE-COLOR"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"BORD-COLOR"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"black"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"black"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 27 3 1 #" "
0 0 23 3 2 #"36"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"SCENE-LEN"
0 0 27 3 2 #" ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 3 #")) "
0 0 18 3 11 #"; 3 columns"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"e-scene"
0 0 27 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 27 3 1 #" "
0 0 14 3 9 #"SCENE-LEN"
0 0 27 3 1 #" "
0 0 14 3 9 #"SCENE-LEN"
0 0 27 3 4 #"))  "
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"INITMOVES"
0 0 27 3 1 #" "
0 0 23 3 2 #"15"
0 0 27 3 2 #") "
0 0 18 3 44 #"; number of moves to create an initial board"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 17 #";; tval --> image"
0 0 27 29 1 #"\n"
0 0 18 3 59
#";; Purpose: Return the tile image for the given tile number"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-tval"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-tval"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 7 #"overlay"
0 0 27 3 2 #" ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 27 3 1 #" "
0 0 14 3 10 #"BORD-COLOR"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 10 #"TILE-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 7 #"overlay"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-tval"
0 0 27 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 27 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 27 3 1 #" "
0 0 14 3 10 #"BORD-COLOR"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 10 #"TILE-COLOR"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 39 #";; Sample expressions for make-tile-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T0"
0 0 27 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 27 3 2 #" ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 27 3 1 #" "
0 0 14 3 10 #"BORD-COLOR"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 10 #"TILE-COLOR"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T1"
0 0 27 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 27 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 27 3 1 #" "
0 0 14 3 10 #"BORD-COLOR"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 10 #"TILE-COLOR"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T2"
0 0 27 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 27 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 27 3 1 #" "
0 0 14 3 10 #"BORD-COLOR"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 14 3 8 #"TILE-LEN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 10 #"TILE-COLOR"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Tests using sample computations for make-tile-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 14 3 2 #"T0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 2 #") "
0 0 14 3 2 #"T1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 14 3 2 #"T2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 46 #";; Tests using sample values for make-tile-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #") "
0 6           4 23 679
(7
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \"8\" 0 "
 #"1 \"black\" 36 #f swiss normal normal #f))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 1"
 #"00 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"black\"))"
 #"))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0"
 #" 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 "
 #"0 0 100 0 0)) 255 \"green\")))) #(struct:bb 100.0 100.0 100.0) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #") "
0 6           4 23 679
(8
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \"5\" 0 "
 #"1 \"black\" 36 #f swiss normal normal #f))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 1"
 #"00 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"black\"))"
 #"))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0"
 #" 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 "
 #"0 0 100 0 0)) 255 \"green\")))) #(struct:bb 100.0 100.0 100.0) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T3"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T4"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T5"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T6"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T7"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T8"
0 0 27 3 2 #" ("
0 0 14 3 13 #"make-tile-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 24 #";; WORLD DATA DEFINITION"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; A board position (bpos) is an integer in [0..8]"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 14 #";; Sample bpos"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"TRCRNR"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"MLEFTC"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 30 #";; Function template f-on-bpos"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 1 #"#"
0 0 18 3 1 #"|"
0 0 18 29 1 #"\n"
0 0 18 3 19 #";; bpos ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 4 #";; P"
0 0 18 3 1 #"u"
0 0 18 3 6 #"rpose:"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 2 #" ("
0 0 18 3 10 #"f-on-bpos "
0 0 18 3 7 #"a-bpos "
0 0 18 3 3 #"..."
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 7 #"  (cond"
0 0 18 3 19 #" [(= a-bpos 0) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"        [(= a-bpos 1) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"        [(= a-bpos 2) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"        [(= a-bpos 3) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"        [(= a-bpos 4) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"        [(= a-bpos 5) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"        [(= a-bpos 6) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"        [(= a-bpos 7) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"        [else"
0 0 18 3 1 #" "
0 0 18 3 3 #"..."
0 0 18 3 3 #"]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 35 #";; Sample expressions for f-on-bpos"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"(define TRCRNR-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"(define CENTER-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"(define MLEFTC-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 48 #";; Tests using sample computations for f-on-bpos"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"(check-expect (f-on-bpos TRCRNR ...) TRCRNR-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"(check-expect (f-on-bpos CENTER ...) CENTER-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 35 #" (f-on-bpos MLEFTC ...) MLEFTC-VAL)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 42 #";; Tests using sample values for f-on-bpos"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 16 #" (f-on-bpos ... "
0 0 18 3 3 #"..."
0 0 18 3 2 #") "
0 0 18 3 3 #"..."
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 8 #"     ..."
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 35 #";; A tile value, tval, is in [0..8]"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 14 #";; Sample tval"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"BLNK"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"FOUR"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"FIVE"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 30 #";; Function template f-on-tval"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 2 #"#|"
0 0 18 29 1 #"\n"
0 0 18 3 7 #";; tval"
0 0 18 3 12 #" ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 11 #";; Purpose:"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"(define (f-on-tval"
0 0 18 3 7 #" a-tval"
0 0 18 3 1 #" "
0 0 18 3 3 #"..."
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 7 #"  (cond"
0 0 18 3 11 #" [(= a-tval"
0 0 18 3 8 #" 0) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"        [(= a-tval"
0 0 18 3 8 #" 1) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"        [(= a-tval"
0 0 18 3 8 #" 2) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"        [(= a-tval"
0 0 18 3 8 #" 3) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"        [(= a-tval"
0 0 18 3 8 #" 4) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"        [(= a-tval"
0 0 18 3 8 #" 5) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"        [(= a-tval"
0 0 18 3 8 #" 6) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"        [(= a-tval"
0 0 18 3 8 #" 7) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 9 #"        ["
0 0 18 3 4 #"else"
0 0 18 3 4 #" ..."
0 0 18 3 3 #"]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 18 #";; Sample expressi"
0 0 18 3 17 #"ons for f-on-tval"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"(define BLNK-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"(define FOUR-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"(def"
0 0 18 3 17 #"ine FIVE-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 48 #";; Tests using sample computations for f-on-tval"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 43 #"check-expect (f-on-tval BLNK ...) BLNK-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"(check-expect (f-on-tval FOUR ...) FOUR-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"(check-expect (f-on-tval FIVE ...) FIVE-VAL)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 42 #";; Tests using sample values for f-on-tval"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 16 #" (f-on-tval ... "
0 0 18 3 3 #"..."
0 0 18 3 2 #") "
0 0 18 3 3 #"..."
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 8 #"     ..."
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 67
#";; A world is a structure, (make-world t0 t1 t2 t3 t4 t5 t6 t7 t8),"
0 0 27 29 1 #"\n"
0 0 18 3 29 #";; where each field is a tval"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 13 #"define-struct"
0 0 27 3 1 #" "
0 0 14 3 5 #"world"
0 0 27 3 2 #" ("
0 0 14 3 2 #"t0"
0 0 27 3 1 #" "
0 0 14 3 2 #"t1"
0 0 27 3 1 #" "
0 0 14 3 2 #"t2"
0 0 27 3 1 #" "
0 0 14 3 2 #"t3"
0 0 27 3 1 #" "
0 0 14 3 2 #"t4"
0 0 27 3 1 #" "
0 0 14 3 2 #"t5"
0 0 27 3 1 #" "
0 0 14 3 2 #"t6"
0 0 27 3 1 #" "
0 0 14 3 2 #"t7"
0 0 27 3 1 #" "
0 0 14 3 2 #"t8"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 16 #";; Sample worlds"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 10 #"         ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                                "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                                "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"A-WRLD"
0 0 27 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                                "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                                "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 31 #";; Function template f-on-world"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 1 #"#"
0 0 18 3 1 #"|"
0 0 18 29 1 #"\n"
0 0 18 3 20 #";; world ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 11 #";; Purpose:"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"(define (f-on-world a-world ...)"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"  (... (f-on-tval"
0 0 18 3 12 #" (world-t0))"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       (f-on-tval"
0 0 18 3 12 #" (world-t1))"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       (f-on-tval"
0 0 18 3 12 #" (world-t2))"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       (f-on-tval"
0 0 18 3 12 #" (world-t3))"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       (f-on-tval"
0 0 18 3 12 #" (world-t4))"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       (f-on-tval"
0 0 18 3 12 #" (world-t5))"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       (f-on-tval"
0 0 18 3 12 #" (world-t6))"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       (f-on-tval"
0 0 18 3 12 #" (world-t7))"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       (f-on-tval"
0 0 18 3 18 #" (world-t8)) ...))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 36 #";; Sample expressions for f-on-world"
0 0 18 29 1 #"\n"
0 0 18 3 20 #"(define WIN-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 24 #"(define A-WORLD-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 31 #";; Tests using sample computati"
0 0 18 3 17 #"ons for f-onworld"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"(check-expect (f-on-world WIN ...)     WIN-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 51 #"(check-expect (f-on-world A-WORLD ...) A-WORLD-VAL)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 42 #";; Tests using sample values for f-onworld"
0 0 18 29 1 #"\n"
0 0 18 3 39 #"(check-expect (f-on-world ... ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 8 #"     ..."
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 29 #";; A valid key (vk) is either"
0 0 27 29 1 #"\n"
0 0 18 3 10 #";; 1. \"up\""
0 0 27 29 1 #"\n"
0 0 18 3 12 #";; 2. \"down\""
0 0 27 29 1 #"\n"
0 0 18 3 12 #";; 3. \"left\""
0 0 27 29 1 #"\n"
0 0 18 3 13 #";; 4. \"right\""
0 0 27 29 1 #"\n"
0 0 18 3 9 #";; 5. \" \""
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 13 #";; Sample vks"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"UP"
0 0 27 3 4 #"    "
0 0 20 3 4 #"\"up\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"DOWN"
0 0 27 3 2 #"  "
0 0 20 3 6 #"\"down\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 27 3 2 #"  "
0 0 20 3 6 #"\"left\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"right\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"HKEY"
0 0 27 3 2 #"  "
0 0 20 3 3 #"\" \""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 32 #";; Function template for f-on-vk"
0 0 27 29 1 #"\n"
0 0 18 3 1 #"#"
0 0 18 3 1 #"|"
0 0 18 29 1 #"\n"
0 0 18 3 5 #";; vk"
0 0 18 3 12 #" ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 11 #";; Purpose:"
0 0 18 29 1 #"\n"
0 0 18 3 16 #"(define (f-on-vk"
0 0 18 3 5 #" a-vk"
0 0 18 3 5 #" ...)"
0 0 18 29 1 #"\n"
0 0 18 3 20 #"  (cond [(key=? a-vk"
0 0 18 3 12 #" UP)    ...]"
0 0 18 29 1 #"\n"
0 0 18 3 1 #" "
0 0 18 3 19 #"       [(key=? a-vk"
0 0 18 3 12 #" DOWN)  ...]"
0 0 18 29 1 #"\n"
0 0 18 3 20 #"        [(key=? a-vk"
0 0 18 3 12 #" LEFT)  ...]"
0 0 18 29 1 #"\n"
0 0 18 3 20 #"        [(key=? a-vk"
0 0 18 3 12 #" RIGHT) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 20 #"        [else ...]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 20 #";; Tests for f-on-vk"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"(check-expect (f-on-vk"
0 0 18 3 16 #" UP    ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"(check-expect (f-on-vk"
0 0 18 3 16 #" DOWN  ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"(check-expect (f-on-vk"
0 0 18 3 16 #" LEFT  ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"(check-expect (f-on-vk"
0 0 18 3 16 #" RIGHT ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"(check-expect (f-on-vk"
0 0 18 3 16 #" HKEY  ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 11 #";;  board p"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 29 #"; draw-world: world --> scene"
0 0 27 29 1 #"\n"
0 0 18 3 53 #"; Purpose: To draw the given world in the empty-scene"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 5 #"local"
0 0 27 3 2 #" ["
0 0 18 3 15 #";; BV --> image"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 44 #";; Purpose: Return the given BV's tile image"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"tile-img"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-bv"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 4 #"a-bv"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 14 3 2 #"T0"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 4 #"a-bv"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 2 #") "
0 0 14 3 2 #"T1"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 4 #"a-bv"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 14 3 2 #"T2"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 4 #"a-bv"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 14 3 2 #"T3"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 4 #"a-bv"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #") "
0 0 14 3 2 #"T4"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 4 #"a-bv"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #") "
0 0 14 3 2 #"T5"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 4 #"a-bv"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 2 #") "
0 0 14 3 2 #"T6"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 4 #"a-bv"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 2 #") "
0 0 14 3 2 #"T7"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 27 3 1 #" "
0 0 14 3 2 #"T8"
0 0 27 3 4 #"]))]"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ("
0 0 14 3 5 #"above"
0 0 27 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 27 3 2 #" ("
0 0 14 3 8 #"tile-img"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t0"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 8 #"tile-img"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t1"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 8 #"tile-img"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t2"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 6 #"beside"
0 0 27 3 2 #" ("
0 0 14 3 8 #"tile-img"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t3"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 8 #"tile-img"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t4"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 8 #"tile-img"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t5"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 6 #"beside"
0 0 27 3 2 #" ("
0 0 14 3 8 #"tile-img"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t6"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 8 #"tile-img"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t7"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 8 #"tile-img"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t8"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 6 #"))))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 23 #";; Tests for draw-world"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 2 #") "
0 6           4 23 6241
(9
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 "
 #"#(struct:text \"1\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(str"
 #"uct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0"
 #")) outline \"black\"))))) #(struct:translate 0.0 0.0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #("
 #"struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:trans"
 #"late 100.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct"
 #":text \"2\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:tr"
 #"anslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pull"
 #"ed-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outli"
 #"ne \"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:p"
 #"ulled-point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:translate 2"
 #"00.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text "
 #"\"3\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"b"
 #"lack\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-"
 #"point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:translate 0.0 100"
 #".0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:"
 #"text \"4\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulle"
 #"d-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outlin"
 #"e \"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pu"
 #"lled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:translate 100."
 #"0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \"5"
 #"\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point "
 #"0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"blac"
 #"k\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:translate 200.0 0.0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \"6\" 0 1"
 #" \"black\" 36 #f swiss normal normal #f))) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 10"
 #"0 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"black\")))"
 #")) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 "
 #"0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0"
 #" 0 100 0 0)) 255 \"green\"))))))))) #(struct:translate 0.0 200.0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \""
 #"7\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point"
 #" 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"bla"
 #"ck\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-po"
 #"int 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:translate 100.0 0.0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \"8\" 0 1 "
 #"\"black\" 36 #f swiss normal normal #f))) #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100"
 #" 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"black\"))))"
 #") #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0"
 #" 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 "
 #"0 100 0 0)) 255 \"green\"))))))) #(struct:translate 200.0 0.0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100"
 #" 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point "
 #"0 0 0 100 0 0)) outline \"black\"))) #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 "
 #"0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\")))))))) #(st"
 #"ruct:bb 300.0 300.0 300.0) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 6 #"A-WRLD"
0 0 27 3 2 #") "
0 6           4 23 6241
(10
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 "
 #"#(struct:text \"1\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(str"
 #"uct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0"
 #")) outline \"black\"))))) #(struct:translate 0.0 0.0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #("
 #"struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:trans"
 #"late 100.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct"
 #":text \"5\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:tr"
 #"anslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pull"
 #"ed-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outli"
 #"ne \"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:p"
 #"ulled-point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:translate 2"
 #"00.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text "
 #"\"2\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"b"
 #"lack\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-"
 #"point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:translate 0.0 100"
 #".0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:"
 #"text \"4\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulle"
 #"d-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outlin"
 #"e \"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pu"
 #"lled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:translate 100."
 #"0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:"
 #"pulled-point 0 0 0 100 0 0)) outline \"black\"))) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point"
 #" 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\""
 #"))))))) #(struct:translate 200.0 0.0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 40.0 29.5 #(struct:transl"
 #"ate 10.0 20.5 #(struct:text \"3\" 0 1 \"black\" 36 #f swiss normal no"
 #"rmal #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10"
 #"0 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point"
 #" 0 0 0 100 0 0)) outline \"black\"))))) #(struct:translate 0.0 0.0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 1"
 #"00 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))))"
 #"))) #(struct:translate 0.0 200.0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 40.0 29.5 #(struct"
 #":translate 10.0 20.5 #(struct:text \"7\" 0 1 \"black\" 36 #f swiss no"
 #"rmal normal #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulle"
 #"d-point 0 0 0 100 0 0)) outline \"black\"))))) #(struct:translate 0.0"
 #" 0.0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-poin"
 #"t 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green"
 #"\"))))) #(struct:translate 100.0 0.0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 40.0 29.5 #(struct:transl"
 #"ate 10.0 20.5 #(struct:text \"8\" 0 1 \"black\" 36 #f swiss normal no"
 #"rmal #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10"
 #"0 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point"
 #" 0 0 0 100 0 0)) outline \"black\"))))) #(struct:translate 0.0 0.0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 1"
 #"00 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))))"
 #") #(struct:translate 200.0 0.0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 40.0 29.5 #(struct:translate 10"
 #".0 20.5 #(struct:text \"6\" 0 1 \"black\" 36 #f swiss normal normal #"
 #"f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 "
 #"0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0"
 #" 100 0 0)) outline \"black\"))))) #(struct:translate 0.0 0.0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100"
 #" 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\")))))))) #(s"
 #"truct:bb 300.0 300.0 300.0) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 3 #")) "
0 6           4 23 5869
(11
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 "
 #"#(struct:text \"5\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(str"
 #"uct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0"
 #")) outline \"black\"))))) #(struct:translate 0.0 0.0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #("
 #"struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:trans"
 #"late 100.0 0.0 #(struct:overlay #(struct:overlay #(struct:translate 5"
 #"0.0 50.0 #(struct:text \"2\" 0 1 \"black\" 36 #f swiss normal normal "
 #"#f)) #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(st"
 #"ruct:pulled-point 0 0 0 100 0 0)) outline \"black\")) #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0.0 0.0 0 0) #(struct:pulled-point 0 0 1"
 #"00.0 0.0 0 0) #(struct:pulled-point 0 0 100.0 100.0 0 0) #(struct:pul"
 #"led-point 0 0 0.0 100.0 0 0)) 255 \"green\"))))) #(struct:translate 2"
 #"00.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text "
 #"\"3\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"b"
 #"lack\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-"
 #"point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:translate 0.0 100"
 #".0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:overlay #(struct:translate 50"
 #".0 50.0 #(struct:text \"1\" 0 1 \"black\" 36 #f swiss normal normal #"
 #"f)) #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(str"
 #"uct:pulled-point 0 0 0 100 0 0)) outline \"black\")) #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0.0 0.0 0 0) #(struct:pulled-point 0 0 10"
 #"0.0 0.0 0 0) #(struct:pulled-point 0 0 100.0 100.0 0 0) #(struct:pull"
 #"ed-point 0 0 0.0 100.0 0 0)) 255 \"green\"))) #(struct:translate 100."
 #"0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \"8"
 #"\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point "
 #"0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"blac"
 #"k\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:translate 200.0 0.0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \"6\" 0 1"
 #" \"black\" 36 #f swiss normal normal #f))) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 10"
 #"0 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"black\")))"
 #")) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 "
 #"0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0"
 #" 0 100 0 0)) 255 \"green\"))))))))) #(struct:translate 0.0 200.0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \""
 #"4\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point"
 #" 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"bla"
 #"ck\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-po"
 #"int 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:translate 100.0 0.0 #"
 #"(struct:overlay #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 10"
 #"0 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"black\") #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulle"
 #"d-point 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:translate 200.0 0"
 #".0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text \"7\" "
 #"0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0"
 #" 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"black\""
 #"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100"
 #" 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point "
 #"0 0 0 100 0 0)) 255 \"green\")))))))) #(struct:bb 300.0 300.0 300.0) "
 #"#f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 22 #";; world key --> world"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Purpose: Return next world after a key event"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 5 #"local"
0 0 27 3 2 #" ["
0 0 18 3 18 #";; key --> Boolean"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 42 #";; Purpose: Determine in given key is a vk"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 3 #"vk?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #" "
0 0 14 3 2 #"UP"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #" "
0 0 14 3 4 #"DOWN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #" "
0 0 14 3 4 #"HKEY"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 15 #";; vk --> world"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 48 #";; Purpose: Return the next world after given vk"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"process-vk"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 16 3 5 #"local"
0 0 27 3 2 #" ["
0 0 18 3 17 #";; world --> bpos"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 50 #";; Purpose: Return the blank's bpos in given world"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t0"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t1"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"1"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t2"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t3"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"3"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t4"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"4"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t5"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"5"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t6"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"6"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t7"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"7"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t8"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"8"
0 0 27 3 3 #"]))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 14 #";; vk --> bpos"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 50 #";; Purpose: Return the bpos to move the blank into"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 15 #"get-target-bpos"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 1 #" "
0 0 14 3 2 #"UP"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 1 #"<"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                 "
0 0 14 3 8 #"BLNK-POS"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 1 #"-"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 1 #" "
0 0 14 3 4 #"DOWN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 1 #">"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                 "
0 0 14 3 8 #"BLNK-POS"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                            [("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                 "
0 0 14 3 8 #"BLNK-POS"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ["
0 0 14 3 4 #"else"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                 "
0 0 14 3 8 #"BLNK-POS"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 5 #"))]))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 17 #";; bpos --> world"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 44 #";; Purpose: Move the blank to the given bpos"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"swap-empty"
0 0 27 3 1 #" "
0 0 14 3 6 #"target"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 16 3 5 #"local"
0 0 27 3 2 #" ["
0 0 18 3 16 #";; bpos --> bval"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 18 3 39 #";; Purpose: Return the given bpos' bval"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 14 #"get-tile-value"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #") ("
0 0 14 3 8 #"world-t0"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                      [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 3 #") ("
0 0 14 3 8 #"world-t1"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                      [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #") ("
0 0 14 3 8 #"world-t2"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                      [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #") ("
0 0 14 3 8 #"world-t3"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                      [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 3 #") ("
0 0 14 3 8 #"world-t4"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                      [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 3 #") ("
0 0 14 3 8 #"world-t5"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                      [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 3 #") ("
0 0 14 3 8 #"world-t6"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                      [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 3 #") ("
0 0 14 3 8 #"world-t7"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ["
0 0 14 3 4 #"else"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t8"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 4 #")]))"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                      "
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 18 3 16 #";; bpos --> bval"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 18 3 42 #";; Purpose: Return new value of given bpos"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"target"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                      [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 3 #") ("
0 0 14 3 14 #"get-tile-value"
0 0 27 3 1 #" "
0 0 14 3 6 #"target"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ["
0 0 14 3 4 #"else"
0 0 27 3 2 #" ("
0 0 14 3 14 #"get-tile-value"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 5 #")]))]"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 10 #"make-world"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 14 #"new-tile-value"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 18 #";; world --> world"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 38 #";; Purpose: Make a move for the player"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-move"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 16 3 5 #"local"
0 0 27 3 3 #" [("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"neighbors"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 2 #"(("
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"BLNK-NEIGHS"
0 0 27 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 27 3 1 #" "
0 0 14 3 9 #"neighbors"
0 0 27 3 1 #" "
0 0 14 3 8 #"BLNK-POS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 18 3 55 #";; (listof (list world number)) --> (list world number)"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 18 3 61
#";; Purpose: Return the pair with the smallest heuristic value"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 9 #"best-pair"
0 0 27 3 1 #" "
0 0 14 3 4 #"lobv"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 4 #"lobv"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"lobv"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 16 3 5 #"local"
0 0 27 3 3 #" [("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"best-of-rest"
0 0 27 3 2 #" ("
0 0 14 3 9 #"best-pair"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 4 #"lobv"
0 0 27 3 4 #")))]"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 2 #"<="
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"lobv"
0 0 27 3 4 #")) ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 12 #"best-of-rest"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 43 #"                                          ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"lobv"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 42 #"                                          "
0 0 14 3 12 #"best-of-rest"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 18 3 19 #";; world --> number"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 18 3 60
#";; Purpose: Return the Manhattan distance of the given world"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 18 #"manhattan-distance"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 16 3 5 #"local"
0 0 27 3 2 #" ["
0 0 18 3 23 #";; bpos tval --> number"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                        "
0 0 18 3 55 #";; Purpose: Return distance of given tval in given bpos"
0 0 27 29 1 #"\n"
0 0 27 3 41 #"                                        ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-tval"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 43 #"                                          ("
0 0 16 3 5 #"local"
0 0 27 3 2 #" ["
0 0 18 3 16 #";; tval --> bpos"
0 0 27 29 1 #"\n"
0 0 27 3 50 #"                                                  "
0 0 18 3 48 #";; Purpose: Return the bpos of given tile in WIN"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"target-pos"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-tval"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 53 #"                                                    ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 6 #"a-tval"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"8"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-tval"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 50 #"                                                  "
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"target-bpos"
0 0 27 3 2 #" ("
0 0 14 3 10 #"target-pos"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-tval"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 1 #"+"
0 0 27 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 27 3 2 #" ("
0 0 14 3 1 #"-"
0 0 27 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 27 3 2 #"  "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 27 3 2 #"  "
0 0 14 3 11 #"target-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 48 #"                                               ("
0 0 14 3 3 #"abs"
0 0 27 3 2 #" ("
0 0 14 3 1 #"-"
0 0 27 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #") ("
0 0 14 3 9 #"remainder"
0 0 27 3 1 #" "
0 0 14 3 11 #"target-bpos"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 7 #"))))))]"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 1 #"+"
0 0 27 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t0"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                     ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t1"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                     ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t2"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                     ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t3"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                     ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t4"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                     ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t5"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                     ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t6"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                     ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t7"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                     ("
0 0 14 3 8 #"distance"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #" ("
0 0 14 3 8 #"world-t8"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"children"
0 0 27 3 2 #" ("
0 0 14 3 3 #"map"
0 0 27 3 1 #" "
0 0 14 3 10 #"swap-empty"
0 0 27 3 1 #" "
0 0 14 3 11 #"BLNK-NEIGHS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"hvals"
0 0 27 3 2 #" ("
0 0 14 3 3 #"map"
0 0 27 3 1 #" "
0 0 14 3 18 #"manhattan-distance"
0 0 27 3 1 #" "
0 0 14 3 8 #"children"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 5 #"first"
0 0 27 3 2 #" ("
0 0 14 3 9 #"best-pair"
0 0 27 3 2 #" ("
0 0 14 3 3 #"map"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 5 #"child"
0 0 27 3 1 #" "
0 0 14 3 4 #"hval"
0 0 27 3 3 #") ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 5 #"child"
0 0 27 3 1 #" "
0 0 14 3 4 #"hval"
0 0 27 3 3 #")) "
0 0 14 3 8 #"children"
0 0 27 3 1 #" "
0 0 14 3 5 #"hvals"
0 0 27 3 6 #")))))]"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 1 #" "
0 0 14 3 2 #"UP"
0 0 27 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 1 #" "
0 0 14 3 4 #"DOWN"
0 0 27 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 27 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 19 #"                  ("
0 0 14 3 10 #"swap-empty"
0 0 27 3 3 #"  ("
0 0 14 3 15 #"get-target-bpos"
0 0 27 3 1 #" "
0 0 14 3 4 #"a-vk"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 19 #"                  ("
0 0 14 3 9 #"make-move"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 5 #"))))]"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"vk?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ("
0 0 14 3 10 #"process-vk"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"        "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 24 #";; Tests for process-key"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 1 #" "
0 0 14 3 2 #"UP"
0 0 27 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 1 #" "
0 0 14 3 4 #"DOWN"
0 0 27 3 2 #") "
0 0 14 3 3 #"WIN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 6 #"A-WRLD"
0 0 27 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 27 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 6 #"A-WRLD"
0 0 27 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 27 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 18 3 48 #";(check-expect (process-key A-WRLD HKEY) A-WRLD)"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; world --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Purpose: Determine if the game has ended"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 36 #";; Sample expressions for game-over?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"WIN-OVER"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"A-WRLD-OVER"
0 0 27 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 27 3 1 #" "
0 0 14 3 6 #"A-WRLD"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Tests using sample computations for game-over? "
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 1 #" "
0 0 14 3 6 #"A-WRLD"
0 0 27 3 2 #") "
0 0 14 3 11 #"A-WRLD-OVER"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 5 #")    "
0 0 14 3 8 #"WIN-OVER"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Tests using sample values for game-over?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 3 #")) "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 3 #")) "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; world --> image"
0 0 27 29 1 #"\n"
0 0 18 3 32 #";; Purpose: Draw the final world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 18 #"\"PUZZLE SOLVED!!!\""
0 0 27 3 1 #" "
0 0 23 3 2 #"28"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 3 #"-25"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 3 #"-75"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 41 #";; Sample expressions for draw-last-world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"WIN-FIMG"
0 0 27 3 2 #" ("
0 0 14 3 10 #"overlay/xy"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 18 #"\"PUZZLE SOLVED!!!\""
0 0 27 3 1 #" "
0 0 23 3 2 #"28"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 23 3 3 #"-25"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 23 3 3 #"-75"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"A-WRLD-FIMG"
0 0 27 3 2 #" ("
0 0 14 3 10 #"overlay/xy"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 18 #"\"PUZZLE SOLVED!!!\""
0 0 27 3 1 #" "
0 0 23 3 2 #"28"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                               "
0 0 23 3 3 #"-25"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                               "
0 0 23 3 3 #"-75"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 6 #"A-WRLD"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 54 #";; Tests using sample computations for draw-last-world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 1 #" "
0 0 14 3 3 #"WIN"
0 0 27 3 5 #")    "
0 0 14 3 8 #"WIN-FIMG"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 1 #" "
0 0 14 3 6 #"A-WRLD"
0 0 27 3 2 #") "
0 0 14 3 11 #"A-WRLD-FIMG"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 48 #";; Tests using sample values for draw-last-world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 3 #")) "
0 6           4 23 8437
(12
 #"(#(struct:overlay #(struct:translate 25 75 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 9.5 16.0 #(struct:text \"P\""
 #" 0 1 \"brown\" 28 #f swiss normal normal #f))) #(struct:translate 19."
 #"0 0.0 #(struct:translate 10.0 16.0 #(struct:text \"U\" 0 1 \"brown\" "
 #"28 #f swiss normal normal #f))))) #(struct:translate 39.0 0.0 #(struc"
 #"t:translate 8.5 16.0 #(struct:text \"Z\" 0 1 \"brown\" 28 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 56.0 0.0 #(struct:translate 8."
 #"5 16.0 #(struct:text \"Z\" 0 1 \"brown\" 28 #f swiss normal normal #f"
 #"))))) #(struct:translate 73.0 0.0 #(struct:translate 8.0 16.0 #(struc"
 #"t:text \"L\" 0 1 \"brown\" 28 #f swiss normal normal #f))))) #(struct"
 #":translate 89.0 0.0 #(struct:translate 9.5 16.0 #(struct:text \"E\" 0"
 #" 1 \"brown\" 28 #f swiss normal normal #f))))) #(struct:translate 108"
 #".0 0.0 #(struct:translate 4.0 16.0 #(struct:text \" \" 0 1 \"brown\" "
 #"28 #f swiss normal normal #f))))) #(struct:translate 116.0 0.0 #(stru"
 #"ct:translate 9.5 16.0 #(struct:text \"S\" 0 1 \"brown\" 28 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 135.0 0.0 #(struct:translate "
 #"11.0 16.0 #(struct:text \"O\" 0 1 \"brown\" 28 #f swiss normal normal"
 #" #f))))) #(struct:translate 157.0 0.0 #(struct:translate 8.0 16.0 #(s"
 #"truct:text \"L\" 0 1 \"brown\" 28 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 173.0 0.0 #(struct:translate 9.5 16.0 #(struct:text \""
 #"V\" 0 1 \"brown\" 28 #f swiss normal normal #f))))) #(struct:translat"
 #"e 192.0 0.0 #(struct:translate 9.5 16.0 #(struct:text \"E\" 0 1 \"bro"
 #"wn\" 28 #f swiss normal normal #f))))) #(struct:translate 211.0 0.0 #"
 #"(struct:translate 10.0 16.0 #(struct:text \"D\" 0 1 \"brown\" 28 #f s"
 #"wiss normal normal #f))))) #(struct:translate 231.0 0.0 #(struct:tran"
 #"slate 4.0 16.0 #(struct:text \"!\" 0 1 \"brown\" 28 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 239.0 0.0 #(struct:translate 4.0 16."
 #"0 #(struct:text \"!\" 0 1 \"brown\" 28 #f swiss normal normal #f)))))"
 #" #(struct:translate 247.0 0.0 #(struct:translate 4.0 16.0 #(struct:te"
 #"xt \"!\" 0 1 \"brown\" 28 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 40.0 29.5 #(struct:translate "
 #"10.0 20.5 #(struct:text \"4\" 0 1 \"black\" 36 #f swiss normal normal"
 #" #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 "
 #"0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0"
 #" 0 100 0 0)) outline \"black\"))))) #(struct:translate 0.0 0.0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 1"
 #"00 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(st"
 #"ruct:translate 100.0 0.0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20."
 #"5 #(struct:text \"3\" 0 1 \"black\" 36 #f swiss normal normal #f))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(s"
 #"truct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0"
 #" 0)) outline \"black\"))))) #(struct:translate 0.0 0.0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) "
 #"#(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:t"
 #"ranslate 200.0 0.0 #(struct:overlay #(struct:overlay #(struct:transla"
 #"te 50.0 50.0 #(struct:text \"1\" 0 1 \"black\" 36 #f swiss normal nor"
 #"mal #f)) #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) "
 #"#(struct:pulled-point 0 0 0 100 0 0)) outline \"black\")) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0.0 0.0 0 0) #(struct:pulled-point 0"
 #" 0 100.0 0.0 0 0) #(struct:pulled-point 0 0 100.0 100.0 0 0) #(struct"
 #":pulled-point 0 0 0.0 100.0 0 0)) 255 \"green\"))))) #(struct:transla"
 #"te 0.0 100.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struc"
 #"t:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0))"
 #" outline \"black\") #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 10"
 #"0 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))) #(s"
 #"truct:translate 100 0.0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5"
 #" #(struct:text \"7\" 0 1 \"black\" 36 #f swiss normal normal #f))) #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(st"
 #"ruct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 "
 #"0)) outline \"black\"))))) #(struct:translate 0.0 0.0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #"
 #"(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:tr"
 #"anslate 200.0 0.0 #(struct:overlay #(struct:overlay #(struct:translat"
 #"e 50.0 50.0 #(struct:text \"2\" 0 1 \"black\" 36 #f swiss normal norm"
 #"al #f)) #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #"
 #"(struct:pulled-point 0 0 0 100 0 0)) outline \"black\")) #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0.0 0.0 0 0) #(struct:pulled-point 0 "
 #"0 100.0 0.0 0 0) #(struct:pulled-point 0 0 100.0 100.0 0 0) #(struct:"
 #"pulled-point 0 0 0.0 100.0 0 0)) 255 \"green\"))))))) #(struct:transl"
 #"ate 0.0 200.0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20."
 #"5 #(struct:text \"8\" 0 1 \"black\" 36 #f swiss normal normal #f))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(s"
 #"truct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0"
 #" 0)) outline \"black\"))))) #(struct:translate 0.0 0.0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) "
 #"#(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:tra"
 #"nslate 100.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(stru"
 #"ct:text \"5\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pu"
 #"lled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) out"
 #"line \"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct"
 #":pulled-point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:translate"
 #" 200.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:tex"
 #"t \"6\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-p"
 #"oint 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline "
 #"\"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pull"
 #"ed-point 0 0 0 100 0 0)) 255 \"green\")))))))))) #(struct:bb 300.0 30"
 #"0.0 300.0) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 3 #")) "
0 6           4 23 8439
(13
 #"(#(struct:overlay #(struct:translate 25 75 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 9.5 16.0 #(struct:text \"P\""
 #" 0 1 \"brown\" 28 #f swiss normal normal #f))) #(struct:translate 19."
 #"0 0.0 #(struct:translate 10.0 16.0 #(struct:text \"U\" 0 1 \"brown\" "
 #"28 #f swiss normal normal #f))))) #(struct:translate 39.0 0.0 #(struc"
 #"t:translate 8.5 16.0 #(struct:text \"Z\" 0 1 \"brown\" 28 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 56.0 0.0 #(struct:translate 8."
 #"5 16.0 #(struct:text \"Z\" 0 1 \"brown\" 28 #f swiss normal normal #f"
 #"))))) #(struct:translate 73.0 0.0 #(struct:translate 8.0 16.0 #(struc"
 #"t:text \"L\" 0 1 \"brown\" 28 #f swiss normal normal #f))))) #(struct"
 #":translate 89.0 0.0 #(struct:translate 9.5 16.0 #(struct:text \"E\" 0"
 #" 1 \"brown\" 28 #f swiss normal normal #f))))) #(struct:translate 108"
 #".0 0.0 #(struct:translate 4.0 16.0 #(struct:text \" \" 0 1 \"brown\" "
 #"28 #f swiss normal normal #f))))) #(struct:translate 116.0 0.0 #(stru"
 #"ct:translate 9.5 16.0 #(struct:text \"S\" 0 1 \"brown\" 28 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 135.0 0.0 #(struct:translate "
 #"11.0 16.0 #(struct:text \"O\" 0 1 \"brown\" 28 #f swiss normal normal"
 #" #f))))) #(struct:translate 157.0 0.0 #(struct:translate 8.0 16.0 #(s"
 #"truct:text \"L\" 0 1 \"brown\" 28 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 173.0 0.0 #(struct:translate 9.5 16.0 #(struct:text \""
 #"V\" 0 1 \"brown\" 28 #f swiss normal normal #f))))) #(struct:translat"
 #"e 192.0 0.0 #(struct:translate 9.5 16.0 #(struct:text \"E\" 0 1 \"bro"
 #"wn\" 28 #f swiss normal normal #f))))) #(struct:translate 211.0 0.0 #"
 #"(struct:translate 10.0 16.0 #(struct:text \"D\" 0 1 \"brown\" 28 #f s"
 #"wiss normal normal #f))))) #(struct:translate 231.0 0.0 #(struct:tran"
 #"slate 4.0 16.0 #(struct:text \"!\" 0 1 \"brown\" 28 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 239.0 0.0 #(struct:translate 4.0 16."
 #"0 #(struct:text \"!\" 0 1 \"brown\" 28 #f swiss normal normal #f)))))"
 #" #(struct:translate 247.0 0.0 #(struct:translate 4.0 16.0 #(struct:te"
 #"xt \"!\" 0 1 \"brown\" 28 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 40.0 29.5 #(struct:translate "
 #"10.0 20.5 #(struct:text \"5\" 0 1 \"black\" 36 #f swiss normal normal"
 #" #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 "
 #"0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0"
 #" 0 100 0 0)) outline \"black\"))))) #(struct:translate 0.0 0.0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 1"
 #"00 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(st"
 #"ruct:translate 100.0 0.0 #(struct:overlay #(struct:overlay #(struct:t"
 #"ranslate 50.0 50.0 #(struct:text \"2\" 0 1 \"black\" 36 #f swiss norm"
 #"al normal #f)) #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100"
 #" 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"black\")) #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0.0 0.0 0 0) #(struct:pulled-p"
 #"oint 0 0 100.0 0.0 0 0) #(struct:pulled-point 0 0 100.0 100.0 0 0) #("
 #"struct:pulled-point 0 0 0.0 100.0 0 0)) 255 \"green\"))))) #(struct:t"
 #"ranslate 200.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(st"
 #"ruct:text \"3\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:"
 #"pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(stru"
 #"ct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:transla"
 #"te 0.0 100.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:overlay #(struct:tr"
 #"anslate 50.0 50.0 #(struct:text \"1\" 0 1 \"black\" 36 #f swiss norma"
 #"l normal #f)) #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 "
 #"0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"black\")) #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0.0 0.0 0 0) #(struct:pulled-po"
 #"int 0 0 100.0 0.0 0 0) #(struct:pulled-point 0 0 100.0 100.0 0 0) #(s"
 #"truct:pulled-point 0 0 0.0 100.0 0 0)) 255 \"green\"))) #(struct:tran"
 #"slate 100.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struc"
 #"t:text \"8\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pul"
 #"led-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outl"
 #"ine \"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:"
 #"pulled-point 0 0 0 100 0 0)) 255 \"green\"))))))) #(struct:translate "
 #"200.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:text"
 #" \"6\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-po"
 #"int 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \""
 #"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled"
 #"-point 0 0 0 100 0 0)) 255 \"green\"))))))))) #(struct:translate 0.0 "
 #"200.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(stru"
 #"ct:text \"4\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pu"
 #"lled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) out"
 #"line \"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct"
 #":pulled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:translate 1"
 #"00.0 0.0 #(struct:overlay #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point "
 #"0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"blac"
 #"k\") #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(st"
 #"ruct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))) #(struct:transla"
 #"te 200.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 40.0 29.5 #(struct:translate 10.0 20.5 #(struct:t"
 #"ext \"7\" 0 1 \"black\" 36 #f swiss normal normal #f))) #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled"
 #"-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline"
 #" \"black\"))))) #(struct:translate 0.0 0.0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pul"
 #"led-point 0 0 0 100 0 0)) 255 \"green\")))))))))) #(struct:bb 300.0 3"
 #"00.0 300.0) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 3 #"run"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-name"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 8 #"big-bang"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 14 3 6 #"A-WRLD"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ("
0 0 14 3 7 #"on-draw"
0 0 27 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ("
0 0 14 3 6 #"on-key"
0 0 27 3 1 #" "
0 0 14 3 11 #"process-key"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ("
0 0 14 3 9 #"stop-when"
0 0 27 3 1 #" "
0 0 14 3 10 #"game-over?"
0 0 27 3 1 #" "
0 0 14 3 15 #"draw-last-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ("
0 0 14 3 4 #"name"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-name"
0 0 27 3 3 #")))"
0           0

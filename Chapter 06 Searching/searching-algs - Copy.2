#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 74 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
49 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 0 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 57 89 216 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 1788 0 4 3 85
(5
 #";; The first three lines of this file were inserted by DrRacket. They"
 #" record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(6
 #";; about the language level of this file in a form that our tools can"
 #" easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 90
(7
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modname"
 #" searching-algs) (read-ca"
) 0 0 4 3 261
(8
 #"se-sensitive #t) (teachpacks ((lib \"image.rkt\" \"teachpack\" \"2htd"
 #"p\") (lib \"universe.rkt\" \"teachpack\" \"2htdp\"))) (htdp-settings "
 #"#(#t constructor repeating-decimal #f #t none #f ((lib \"image.rkt\" "
 #"\"teachpack\" \"2htdp\") (lib \"universe.rkt\" \"teachpack\" \"2htdp"
 #"\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"L0"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"L1"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 1 #"("
0 0 23 3 2 #"88"
0 0 27 3 1 #" "
0 0 23 3 2 #"54"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 2 #"87"
0 0 27 3 1 #" "
0 0 23 3 2 #"98"
0 0 27 3 1 #" "
0 0 23 3 2 #"-7"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 2 #"-1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"L2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 1 #"("
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #"  "
0 0 23 3 1 #"4"
0 0 27 3 2 #"  "
0 0 23 3 1 #"3"
0 0 27 3 2 #"  "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 2 #"  "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 2 #"-1"
0 0 27 3 1 #" "
0 0 23 3 2 #"-2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"L3"
0 0 27 3 2 #" ("
0 0 14 3 10 #"build-list"
0 0 27 3 1 #" "
0 0 23 3 5 #"10000"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 1 #"i"
0 0 27 3 3 #") ("
0 0 14 3 6 #"random"
0 0 27 3 1 #" "
0 0 23 3 7 #"1000000"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 27 3 1 #" "
0 0 14 3 2 #"L1"
0 0 27 3 1 #" "
0 0 14 3 1 #"<"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 27 3 1 #" "
0 0 14 3 2 #"L2"
0 0 27 3 1 #" "
0 0 14 3 1 #"<"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"L3S"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 27 3 1 #" "
0 0 14 3 2 #"L3"
0 0 27 3 1 #" "
0 0 14 3 1 #"<"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 28 #";; A result, res, is either:"
0 0 27 29 1 #"\n"
0 0 18 3 13 #";;  1. natnum"
0 0 27 29 1 #"\n"
0 0 18 3 13 #";;  2. #false"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 21 #";; number lon --> res"
0 0 27 29 1 #"\n"
0 0 18 3 55 #";; Purpose: Return the index of the given number if it "
0 0 27 29 1 #"\n"
0 0 18 3 54 #";;          is a member of the given list. Otherswise,"
0 0 27 29 1 #"\n"
0 0 18 3 25 #";;          return #false"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 2 #") "
0 0 23 3 6 #"#false"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"        [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 3 #")) "
0 0 23 3 1 #"0"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 16 3 5 #"local"
0 0 27 3 3 #" [("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"result-of-rest"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 4 #")))]"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 27 3 1 #" "
0 0 14 3 14 #"result-of-rest"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"               "
0 0 23 3 6 #"#false"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 14 3 14 #"result-of-rest"
0 0 27 3 6 #")))]))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 39 #";; Sample expressions for linear-search"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"LS-L0-VAL"
0 0 27 3 2 #"  "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"LS-L1-VAL1"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"LS-L2-VAL1"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"LS-L1-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-9"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 2 #"L1"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"LS-L2-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"54"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 2 #"L2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"LS-L1-VAL3"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-7"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 2 #"L1"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"LS-L2-VAL3"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 2 #"L2"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Tests using sample computations for linear-search"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"25"
0 0 27 3 1 #" "
0 0 14 3 2 #"L0"
0 0 27 3 2 #") "
0 0 14 3 9 #"LS-L0-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"88"
0 0 27 3 1 #" "
0 0 14 3 2 #"L1"
0 0 27 3 2 #") "
0 0 14 3 10 #"LS-L1-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 14 3 2 #"L2"
0 0 27 3 2 #") "
0 0 14 3 10 #"LS-L2-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-9"
0 0 27 3 1 #" "
0 0 14 3 2 #"L1"
0 0 27 3 2 #") "
0 0 14 3 10 #"LS-L1-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"54"
0 0 27 3 1 #" "
0 0 14 3 2 #"L2"
0 0 27 3 2 #") "
0 0 14 3 10 #"LS-L2-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-7"
0 0 27 3 1 #" "
0 0 14 3 2 #"L1"
0 0 27 3 2 #") "
0 0 14 3 10 #"LS-L1-VAL3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 14 3 2 #"L2"
0 0 27 3 2 #") "
0 0 14 3 10 #"LS-L2-VAL3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 46 #";; Tests using sample values for linear-search"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 27 29 1 #"\n"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 3 #"100"
0 0 27 3 1 #" "
0 0 14 3 2 #"L3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 5 #"a-res"
0 0 27 3 3 #") ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-res"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 27 3 1 #" "
0 0 14 3 2 #"L3"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-res"
0 0 27 3 2 #") "
0 0 23 3 3 #"100"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 1 #"("
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")) "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"linear-search"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 1 #"("
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")) "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 39 #";; number [int>=0..int>=-1] lon --> res"
0 0 27 29 1 #"\n"
0 0 18 3 55 #";; Purpose: Return the index of the given number if it "
0 0 27 29 1 #"\n"
0 0 18 3 54 #";;          is a member of the given list. Otherswise,"
0 0 27 29 1 #"\n"
0 0 18 3 25 #";;          return #false"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 1 #" "
0 0 14 3 3 #"low"
0 0 27 3 1 #" "
0 0 14 3 4 #"high"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 1 #"<"
0 0 27 3 1 #" "
0 0 14 3 4 #"high"
0 0 27 3 1 #" "
0 0 14 3 3 #"low"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 23 3 6 #"#false"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 16 3 5 #"local"
0 0 27 3 3 #" [("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"mid-index"
0 0 27 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 14 3 3 #"low"
0 0 27 3 1 #" "
0 0 14 3 4 #"high"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 1 #" "
0 0 14 3 9 #"mid-index"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-num"
0 0 27 3 2 #") "
0 0 14 3 9 #"mid-index"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"              [("
0 0 14 3 1 #"<"
0 0 27 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 1 #" "
0 0 14 3 9 #"mid-index"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-num"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 1 #" "
0 0 14 3 3 #"low"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 9 #"mid-index"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-lon"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 14 3 9 #"mid-index"
0 0 27 3 2 #") "
0 0 14 3 4 #"high"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 6 #")]))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 36 #";; Sample expressions for bin-search"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"BINS-L0-VAL1"
0 0 27 3 2 #"  "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"BINS-L3S-VAL1"
0 0 27 3 1 #" "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"BINS-L1S-VAL1"
0 0 27 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"BINS-L2S-VAL1"
0 0 27 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"BINS-L1S-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 3 #")  "
0 0 23 3 1 #"2"
0 0 27 3 3 #")) "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"BINS-L2S-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-6"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 3 #")) "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"BINS-L1S-VAL3"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"7"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 4 #"))  "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"BINS-L2S-VAL3"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 3 #")) "
0 0 23 3 2 #"11"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Tests using sample computations for bin-search"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"65"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 2 #"-1"
0 0 27 3 1 #" "
0 0 14 3 2 #"L0"
0 0 27 3 3 #")  "
0 0 14 3 12 #"BINS-L0-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-9"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #"  "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 14 3 3 #"L3S"
0 0 27 3 2 #") "
0 0 14 3 13 #"BINS-L3S-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #") "
0 0 14 3 13 #"BINS-L1S-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #") "
0 0 14 3 13 #"BINS-L2S-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #") "
0 0 14 3 13 #"BINS-L1S-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-6"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #") "
0 0 14 3 13 #"BINS-L2S-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"90"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #") "
0 0 14 3 13 #"BINS-L1S-VAL3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #") "
0 0 14 3 13 #"BINS-L2S-VAL3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Tests using sample values for bin-search"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 27 29 1 #"\n"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 3 #"100"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 23 3 5 #"10000"
0 0 27 3 2 #") "
0 0 14 3 3 #"L3S"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 5 #"a-res"
0 0 27 3 3 #") ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-res"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 27 3 1 #" "
0 0 14 3 2 #"L3"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-res"
0 0 27 3 2 #") "
0 0 23 3 3 #"100"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 1 #"("
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")) "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 1 #"("
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 3 #")) "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 21 #";; number lon --> res"
0 0 27 29 1 #"\n"
0 0 18 3 55 #";; Purpose: Return the index of the given number if it "
0 0 27 29 1 #"\n"
0 0 18 3 54 #";;          is a member of the given list. Otherswise,"
0 0 27 29 1 #"\n"
0 0 18 3 25 #";;          return #false"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-lon"
0 0 27 3 3 #")) "
0 0 14 3 5 #"a-lon"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 39 #";; Sample expressions for binary-search"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"BS-L0-VAL"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"25"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 2 #"L0"
0 0 27 3 3 #")) "
0 0 14 3 2 #"L0"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"BS-L1-VAL1"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"88"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 3 #")) "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"BS-L2-VAL1"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 3 #")) "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"BS-L1-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-9"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 3 #")) "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"BS-L2-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"54"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 3 #")) "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"BS-L1-VAL3"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-7"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 3 #")) "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"BS-L2-VAL3"
0 0 27 3 2 #" ("
0 0 14 3 10 #"bin-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 2 #" ("
0 0 14 3 6 #"length"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 3 #")) "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Tests using sample computations for binary-search"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"25"
0 0 27 3 1 #" "
0 0 14 3 2 #"L0"
0 0 27 3 2 #") "
0 0 14 3 9 #"BS-L0-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"88"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #") "
0 0 14 3 10 #"BS-L1-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #") "
0 0 14 3 10 #"BS-L2-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-9"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #") "
0 0 14 3 10 #"BS-L1-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"54"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #") "
0 0 14 3 10 #"BS-L2-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 1 #" "
0 0 23 3 2 #"-7"
0 0 27 3 1 #" "
0 0 14 3 3 #"L1S"
0 0 27 3 2 #") "
0 0 14 3 10 #"BS-L1-VAL3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 2 #"  "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 14 3 3 #"L2S"
0 0 27 3 2 #") "
0 0 14 3 10 #"BS-L2-VAL3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 46 #";; Tests using sample values for binary-search"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 27 29 1 #"\n"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 1 #" "
0 0 23 3 3 #"100"
0 0 27 3 1 #" "
0 0 14 3 2 #"L3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 5 #"a-res"
0 0 27 3 3 #") ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-res"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 27 3 1 #" "
0 0 14 3 2 #"L3"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-res"
0 0 27 3 2 #") "
0 0 23 3 3 #"100"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 1 #"("
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")) "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"binary-search"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 1 #"("
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")) "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 25 #";; A (treeof X) is either"
0 0 27 29 1 #"\n"
0 0 18 3 13 #";;   1. empty"
0 0 27 29 1 #"\n"
0 0 18 3 36 #";;   2. (cons X (listof (treeof X)))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 29 #";; natnum --> (treeof number)"
0 0 27 29 1 #"\n"
0 0 18 3 51 #";; Purpose: Create a random tree of the given depth"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"make-ton"
0 0 27 3 1 #" "
0 0 14 3 1 #"d"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 3 4 #"  [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 1 #"d"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 3 #"()]"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"         [("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 1 #"d"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 3 #") ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 6 #"random"
0 0 27 3 1 #" "
0 0 23 3 7 #"1000000"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 6 #"random"
0 0 27 3 1 #" "
0 0 23 3 7 #"1000000"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"build-list"
0 0 27 3 2 #" ("
0 0 14 3 6 #"random"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 1 #"i"
0 0 27 3 3 #") ("
0 0 14 3 8 #"make-ton"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 1 #"d"
0 0 27 3 8 #")))))]))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T0"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 4 #"()))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 23 3 3 #"600"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 23 3 3 #"850"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 23 3 2 #"70"
0 0 27 3 3 #") ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 23 3 3 #"235"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 23 3 2 #"87"
0 0 27 3 3 #") ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 23 3 2 #"-5"
0 0 27 3 3 #") ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 23 3 2 #"66"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 23 3 3 #"-88"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 23 3 2 #"23"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 23 3 2 #"44"
0 0 27 3 3 #") ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 23 3 2 #"47"
0 0 27 3 8 #"))))))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 2 #"T3"
0 0 27 3 2 #" ("
0 0 14 3 8 #"make-ton"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 37 #";; number (treeof number) --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 62
#";; Purpose: Determine if the given number is in the given tree"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 17 #"ton-dfs-contains?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-ton"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-ton"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-ton"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 5 #"ormap"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 1 #"t"
0 0 27 3 3 #") ("
0 0 14 3 17 #"ton-dfs-contains?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-num"
0 0 27 3 1 #" "
0 0 14 3 1 #"t"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 19 #"                  ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-ton"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Sample expressions for ton-dfs-contains?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"T0-DFS-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 2 #"T0"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 23 3 2 #"77"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 2 #"T0"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 5 #"ormap"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 1 #"t"
0 0 27 3 3 #") ("
0 0 14 3 17 #"ton-dfs-contains?"
0 0 27 3 1 #" "
0 0 23 3 2 #"77"
0 0 27 3 1 #" "
0 0 14 3 1 #"t"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 2 #"T0"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"T1-DFS-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 2 #"T1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 23 3 2 #"33"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 2 #"T1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 5 #"ormap"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 1 #"t"
0 0 27 3 3 #") ("
0 0 14 3 17 #"ton-dfs-contains?"
0 0 27 3 1 #" "
0 0 23 3 2 #"33"
0 0 27 3 1 #" "
0 0 14 3 1 #"t"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 2 #"T1"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"T2-DFS-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 2 #"T2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 23 3 2 #"23"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 2 #"T2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 5 #"ormap"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 1 #"t"
0 0 27 3 3 #") ("
0 0 14 3 17 #"ton-dfs-contains?"
0 0 27 3 1 #" "
0 0 23 3 2 #"23"
0 0 27 3 1 #" "
0 0 14 3 1 #"t"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 2 #"T2"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"T3-DFS-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 2 #"T3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 23 3 2 #"45"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 2 #"T3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 5 #"ormap"
0 0 27 3 2 #" ("
0 0 16 3 2 #"\316\273"
0 0 27 3 2 #" ("
0 0 14 3 1 #"t"
0 0 27 3 3 #") ("
0 0 14 3 17 #"ton-dfs-contains?"
0 0 27 3 1 #" "
0 0 23 3 2 #"45"
0 0 27 3 1 #" "
0 0 14 3 1 #"t"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 2 #"T3"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 56 #";; Tests using sample computations for ton-dfs-contains?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 16 #"ton-dfs-contains"
0 0 14 3 1 #"?"
0 0 27 3 1 #" "
0 0 23 3 2 #"77"
0 0 27 3 1 #" "
0 0 14 3 2 #"T0"
0 0 27 3 2 #") "
0 0 14 3 10 #"T0-DFS-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"ton-dfs-contains?"
0 0 27 3 1 #" "
0 0 23 3 2 #"33"
0 0 27 3 1 #" "
0 0 14 3 2 #"T1"
0 0 27 3 2 #") "
0 0 14 3 10 #"T1-DFS-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"ton-dfs-contains?"
0 0 27 3 1 #" "
0 0 23 3 2 #"23"
0 0 27 3 1 #" "
0 0 14 3 2 #"T2"
0 0 27 3 2 #") "
0 0 14 3 10 #"T2-DFS-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"ton-dfs-contains?"
0 0 27 3 1 #" "
0 0 23 3 2 #"45"
0 0 27 3 1 #" "
0 0 14 3 2 #"T3"
0 0 27 3 2 #") "
0 0 14 3 10 #"T3-DFS-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Tests using sample values for ton-dfs-contains?"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0           0
